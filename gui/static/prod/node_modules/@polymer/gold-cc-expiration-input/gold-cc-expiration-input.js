import"../polymer/polymer-legacy.js";import"../paper-input/paper-input-container.js";import"../paper-input/paper-input-error.js";import"../iron-input/iron-input.js";import"./date-input.js";import{IronFormElementBehavior}from"../iron-form-element-behavior/iron-form-element-behavior.js";import{PaperInputBehavior}from"../paper-input/paper-input-behavior.js";import{Polymer}from"../polymer/lib/legacy/polymer-fn.js";import{html}from"../polymer/lib/utils/html-tag.js";Polymer({_template:html`
    <style>
      :host {
        display: block;
      }
    </style>

    <paper-input-container
        id="container"
        no-label-float="[[noLabelFloat]]"
        always-float-label="[[alwaysFloatLabel]]"
        attr-for-value="date"
        disabled$="[[disabled]]"
        invalid="[[invalid]]">
      <label slot="label" hidden$="[[!label]]">[[label]]</label>

      <date-input
          class="paper-input-input"
          id="input"
          slot="input"
          aria-label-prefix="[[_ariaLabelledBy]]"
          required$="[[required]]"
          autocomplete$="[[autocomplete]]"
          disabled$="[[disabled]]"
          invalid="{{invalid}}"
          autofocus$="[[autofocus]]"
          inputmode$="[[inputmode]]"
          placeholder$="[[placeholder]]"
          readonly$="[[readonly]]"
          on-date-changed="_onDateChanged">
      </date-input>

      <template is="dom-if" if="[[errorMessage]]">
        <paper-input-error slot="add-on" id="error">
          [[errorMessage]]
        </paper-input-error>
      </template>

    </paper-input-container>
  `,is:"gold-cc-expiration-input",hostAttributes:{tabindex:-1},behaviors:[PaperInputBehavior,IronFormElementBehavior],properties:{label:{type:String,value:"Expiration Date"},value:{type:String,value:"",observer:"_onValueChanged"}},observers:["_onFocusedChanged(focused)"],ready:function(){if(this.value){this._handleAutoValidate()}},created(){this.__ignoreAutoValidation=!0},_onValueChanged:function(value,oldValue){if(oldValue==void 0&&""===value){return}this.$.input.setProperties({month:this._computeMonth(value),year:this._computeYear(value)});this._handleAutoValidate()},_onDateChanged:function(event){if(!this.__firstDateComputeSkipped){this.__firstDateComputeSkipped=!0;return}var month=event.detail.value.month||"",year=event.detail.value.year||"",value=year?month+"/"+year:month;this.value=value+""},_computeMonth:function(value){return value.split("/")[0]},_computeYear:function(value){return value.split("/")[1]||""},validate:function(){return this.$.input.validate()},_onFocusedChanged:function(focused){if(this.__ignoreAutoValidation){this.__ignoreAutoValidation=!1;return}if(!focused){this._handleAutoValidate()}}});