import"../polymer/polymer-legacy.js";import"../iron-flex-layout/iron-flex-layout.js";import"../paper-input/paper-input-container.js";import"../paper-input/paper-input-error.js";import"../iron-input/iron-input.js";import"../iron-icon/iron-icon.js";import{IronFormElementBehavior}from"../iron-form-element-behavior/iron-form-element-behavior.js";import{IronValidatableBehavior}from"../iron-validatable-behavior/iron-validatable-behavior.js";import{PaperInputBehavior}from"../paper-input/paper-input-behavior.js";import{Polymer}from"../polymer/lib/legacy/polymer-fn.js";import{html}from"../polymer/lib/utils/html-tag.js";import{validateCcInput}from"./cc-validator.js";Polymer({_template:html`
    <style>
    :host {
      display: block;
    }

    /* Use a container so that when hiding the icon, the layout doesn't jump around. */
    .icon-container {
      margin-left: 10px;
      height: 24px;
      @apply --gold-cc-input-icon-container;
    }

    iron-icon {
      --iron-icon-width: 40px;
      --iron-icon-height: 24px;
    }

    .container {
      @apply --layout-horizontal;
    }

    input {
      @apply --layout-flex;
    }

    input {
      position: relative; /* to make a stacking context */
      outline: none;
      box-shadow: none;
      padding: 0;
      width: 100%;
      max-width: 100%;
      background: transparent;
      border: none;
      color: var(--paper-input-container-input-color, var(--primary-text-color));
      -webkit-appearance: none;
      text-align: inherit;
      vertical-align: bottom;
      /* Firefox sets a min-width on the input, which can cause layout issues */
      min-width: 0;
      @apply --paper-font-subhead;
      @apply --paper-input-container-input;
    }
    input::-webkit-input-placeholder {
      color: var(--paper-input-container-color, var(--secondary-text-color));
    }
    input:-moz-placeholder {
      color: var(--paper-input-container-color, var(--secondary-text-color));
    }
    input::-moz-placeholder {
      color: var(--paper-input-container-color, var(--secondary-text-color));
    }
    input:-ms-input-placeholder {
      color: var(--paper-input-container-color, var(--secondary-text-color));
    }
    </style>

    <paper-input-container
        id="container"
        disabled$="[[disabled]]"
        no-label-float="[[noLabelFloat]]"
        always-float-label="[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]"
        invalid="[[invalid]]">
      <label slot="label" hidden$="[[!label]]">[[label]]</label>

      <iron-input
          id="input"
          slot="input"
          allowed-pattern="[0-9 ]"
          bind-value="{{value}}"
          invalid="{{invalid}}"
          maxlength="30">
        <input
            id="nativeInput"
            aria-labelledby$="[[_ariaLabelledBy]]"
            aria-describedby$="[[_ariaDescribedBy]]"
            invalid$="{{invalid}}"
            required$="[[required]]"
            type="tel"
            prevent-invalid-input
            autocomplete="cc-number"
            name$="[[name]]"
            disabled$="[[disabled]]"
            autofocus$="[[autofocus]]"
            inputmode$="[[inputmode]]"
            placeholder$="[[placeholder]]"
            readonly$="[[readonly]]"
            size$="[[size]]">
      </iron-input>
      <div class="icon-container" slot="suffix">
        <iron-icon id="icon"></iron-icon>
      </div>

      <template is="dom-if" if="[[errorMessage]]">
        <paper-input-error slot="add-on" id="error">
          [[errorMessage]]
        </paper-input-error>
      </template>
    </paper-input-container>
  `,is:"gold-cc-input",importMeta:import.meta,behaviors:[PaperInputBehavior,IronValidatableBehavior,IronFormElementBehavior],properties:{label:{type:String,value:"Card number"},cardType:{type:String,notify:!0},cardTypes:{type:Array,observer:"_onCardTypesChanged"},value:{type:String,observer:"_onValueChanged"}},observers:["_onFocusedChanged(focused)"],ready:function(){if(!this.value){this.value=""}},get _focusableElement(){return this.inputElement._inputElement},listeners:{"iron-input-ready":"_onIronInputReady"},_onIronInputReady:function(){if(!!this.inputElement.bindValue){this._handleAutoValidate()}},_onCardTypesChanged:function(){if(this.value)this._handleAutoValidate()},_onValueChanged:function(value,oldValue){if(oldValue==void 0)return;var start=this.$.input.selectionStart,previousCharASpace=value?" "==this.value.charAt(start-1):!1;value=value.replace(/\s+/g,"");for(var formattedValue="",i=0;i<value.length;i++){if(0!=i&&0==i%4){formattedValue+=" "}formattedValue+=value[i]}this.updateValueAndPreserveCaret(formattedValue.trim());if(!previousCharASpace&&" "==this.value.charAt(start-1)){this.$.input.selectionStart=start+1;this.$.input.selectionEnd=start+1}this._handleAutoValidate()},validate:function(){if(!this.required&&""==this.value){return!0}var result=validateCcInput(this.value),valid=result.valid&&result.length_valid;if(valid&&this.cardTypes&&0<this.cardTypes.length){valid=-1!==this.cardTypes.indexOf(result.card_type.name)}this.cardType=valid?result.card_type.name:"";this.$.container.invalid=!valid;this.$.container.updateAddons({inputElement:this.$.input,value:this.value,invalid:!valid});if(valid&&result.card_type.icon){this.$.icon.src=this.resolveUrl(result.card_type.icon);this.$.icon.alt=this.cardType;this.$.icon.hidden=!1}else{this.$.icon.src=null;this.$.icon.alt="";this.$.icon.hidden=!0}return valid},_onFocusedChanged:function(focused){if(!this._focusableElement){return}if(!focused){this._handleAutoValidate()}}});