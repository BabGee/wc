import"../polymer/polymer-legacy.js";import"../paper-input/paper-input-container.js";import"../paper-input/paper-input-error.js";import"../iron-input/iron-input.js";import"../iron-icon/iron-icon.js";import"../iron-flex-layout/iron-flex-layout.js";import{IronFormElementBehavior}from"../iron-form-element-behavior/iron-form-element-behavior.js";import{PaperInputBehavior}from"../paper-input/paper-input-behavior.js";import{Polymer}from"../polymer/lib/legacy/polymer-fn.js";import{html}from"../polymer/lib/utils/html-tag.js";Polymer({_template:html`
    <style>
      :host {
        display: block;
      }

      iron-icon {
        margin-left: 10px;
        @apply --gold-cc-cvc-input-icon;
      }

      iron-icon[hidden] {
        display: none !important;
      }

      .container {
        @apply --layout-horizontal;
      }

      input {
        @apply --layout-flex;
        position: relative; /* to make a stacking context */
        outline: none;
        box-shadow: none;
        padding: 0;
        width: 100%;
        max-width: 100%;
        background: transparent;
        border: none;
        color: var(--paper-input-container-input-color, var(--primary-text-color));
        -webkit-appearance: none;
        text-align: inherit;
        vertical-align: bottom;
        /* Firefox sets a min-width on the input, which can cause layout issues */
        min-width: 0;
        @apply --paper-font-subhead;
        @apply --paper-input-container-input;
      }
      input::-webkit-input-placeholder {
        color: var(--paper-input-container-color, var(--secondary-text-color));
      }
      input:-moz-placeholder {
        color: var(--paper-input-container-color, var(--secondary-text-color));
      }
      input::-moz-placeholder {
        color: var(--paper-input-container-color, var(--secondary-text-color));
      }
      input:-ms-input-placeholder {
        color: var(--paper-input-container-color, var(--secondary-text-color));
      }
    </style>

    <paper-input-container id="container" disabled\$="[[disabled]]" no-label-float="[[noLabelFloat]]" always-float-label="[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]" invalid="[[invalid]]">

      <label slot="label" hidden\$="[[!label]]">[[label]]</label>

      <iron-input id="input" slot="input" bind-value="{{value}}" allowed-pattern="[0-9]" invalid="{{invalid}}">
        <input id="nativeInput" aria-labelledby\$="[[_ariaLabelledBy]]" aria-describedby\$="[[_ariaDescribedBy]]" required\$="[[required]]" type="tel" autocomplete="cc-csc" name\$="[[name]]" disabled\$="[[disabled]]" autofocus\$="[[autofocus]]" inputmode\$="[[inputmode]]" placeholder\$="[[placeholder]]" readonly\$="[[readonly]]" maxlength\$="[[_requiredLength]]" size\$="[[size]]">
      </iron-input>
      <div class="icon-container" slot="suffix">
        <iron-icon id="icon" src="[[resolveUrl('cvc_hint.png')]]" hidden\$="[[_amex]]" alt="cvc"></iron-icon>
        <iron-icon id="amexIcon" hidden\$="[[!_amex]]" src="[[resolveUrl('cvc_hint_amex.png')]]" alt="amex cvc"></iron-icon>
      </div>

      <template is="dom-if" if="[[errorMessage]]">
        <paper-input-error slot="add-on">[[errorMessage]]</paper-input-error>
      </template>

    </paper-input-container>
  `,is:"gold-cc-cvc-input",importMeta:import.meta,properties:{label:{type:String,value:"CVC"},cardType:{type:String,value:""},_requiredLength:{type:Number,computed:"_computeRequiredLength(cardType)"},_amex:{type:Boolean,computed:"_computeIsAmex(cardType)"},value:{type:String,observer:"_onValueChanged"}},behaviors:[PaperInputBehavior,IronFormElementBehavior],observers:["_onFocusedChanged(focused)"],ready:function(){if(!this.value){this.value=""}},get _focusableElement(){return this.inputElement._inputElement},listeners:{"iron-input-ready":"_onIronInputReady"},_onIronInputReady:function(){if(!!this.inputElement.bindValue){this._handleAutoValidate()}},_onValueChanged:function(value,oldValue){if(oldValue==void 0){return}this._handleAutoValidate()},_computeRequiredLength:function(cardType){return this._computeIsAmex(cardType)?4:3},_computeIsAmex:function(cardType){return"amex"==cardType.toLowerCase()},validate:function(){var valid=this.$.input.validate()&&this.value.length==this._requiredLength||!this.required&&""==this.value;this.invalid=!valid;this.$.container.invalid=!valid;this.$.container.updateAddons({inputElement:this.$.input,value:this.value,invalid:!valid});return valid},_onFocusedChanged:function(focused){if(!this._focusableElement){return}if(!focused){this._handleAutoValidate()}}});