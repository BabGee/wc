import getDate from"../getDate/index.js";import getDay from"../getDay/index.js";import startOfMonth from"../startOfMonth/index.js";import toInteger from"../_lib/toInteger/index.js";export default function getWeekOfMonth(date,dirtyOptions){if(1>arguments.length){throw new TypeError("1 argument required, but only "+arguments.length+" present")}var options=dirtyOptions||{},locale=options.locale,localeWeekStartsOn=locale&&locale.options&&locale.options.weekStartsOn,defaultWeekStartsOn=null==localeWeekStartsOn?0:toInteger(localeWeekStartsOn),weekStartsOn=null==options.weekStartsOn?defaultWeekStartsOn:toInteger(options.weekStartsOn);if(!(0<=weekStartsOn&&6>=weekStartsOn)){throw new RangeError("weekStartsOn must be between 0 and 6 inclusively")}var currentDayOfMonth=getDate(date);if(isNaN(currentDayOfMonth)){return currentDayOfMonth}var startWeekDay=getDay(startOfMonth(date)),lastDayOfFirstWeek=0;if(startWeekDay>=weekStartsOn){lastDayOfFirstWeek=weekStartsOn+7-startWeekDay}else{lastDayOfFirstWeek=weekStartsOn-startWeekDay}var weekNumber=1;if(currentDayOfMonth>lastDayOfFirstWeek){var remainingDaysAfterFirstWeek=currentDayOfMonth-lastDayOfFirstWeek;weekNumber=weekNumber+Math.ceil(remainingDaysAfterFirstWeek/7)}return weekNumber}