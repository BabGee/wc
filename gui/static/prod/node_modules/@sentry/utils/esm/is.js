export function isError(wat){switch(Object.prototype.toString.call(wat)){case"[object Error]":return!0;case"[object Exception]":return!0;case"[object DOMException]":return!0;default:return isInstanceOf(wat,Error);}}export function isErrorEvent(wat){return"[object ErrorEvent]"===Object.prototype.toString.call(wat)}export function isDOMError(wat){return"[object DOMError]"===Object.prototype.toString.call(wat)}export function isDOMException(wat){return"[object DOMException]"===Object.prototype.toString.call(wat)}export function isString(wat){return"[object String]"===Object.prototype.toString.call(wat)}export function isPrimitive(wat){return null===wat||"object"!==typeof wat&&"function"!==typeof wat}export function isPlainObject(wat){return"[object Object]"===Object.prototype.toString.call(wat)}export function isEvent(wat){return"undefined"!==typeof Event&&isInstanceOf(wat,Event)}export function isElement(wat){return"undefined"!==typeof Element&&isInstanceOf(wat,Element)}export function isRegExp(wat){return"[object RegExp]"===Object.prototype.toString.call(wat)}export function isThenable(wat){return!!(wat&&wat.then&&"function"===typeof wat.then)}export function isSyntheticEvent(wat){return isPlainObject(wat)&&"nativeEvent"in wat&&"preventDefault"in wat&&"stopPropagation"in wat}export function isInstanceOf(wat,base){try{return wat instanceof base}catch(_e){return!1}}