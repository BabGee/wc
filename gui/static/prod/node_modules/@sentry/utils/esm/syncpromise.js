import{isThenable}from"./is.js";var States;(function(States){States.PENDING="PENDING";States.RESOLVED="RESOLVED";States.REJECTED="REJECTED"})(States||(States={}));var SyncPromise=function(){function SyncPromise(executor){var _this=this;this._state=States.PENDING;this._handlers=[];this._resolve=function(value){_this._setResult(States.RESOLVED,value)};this._reject=function(reason){_this._setResult(States.REJECTED,reason)};this._setResult=function(state,value){if(_this._state!==States.PENDING){return}if(isThenable(value)){value.then(_this._resolve,_this._reject);return}_this._state=state;_this._value=value;_this._executeHandlers()};this._attachHandler=function(handler){_this._handlers=_this._handlers.concat(handler);_this._executeHandlers()};this._executeHandlers=function(){if(_this._state===States.PENDING){return}if(_this._state===States.REJECTED){_this._handlers.forEach(function(handler){if(handler.onrejected){handler.onrejected(_this._value)}})}else{_this._handlers.forEach(function(handler){if(handler.onfulfilled){handler.onfulfilled(_this._value)}})}_this._handlers=[]};try{executor(this._resolve,this._reject)}catch(e){this._reject(e)}}SyncPromise.prototype.toString=function(){return"[object SyncPromise]"};SyncPromise.resolve=function(value){return new SyncPromise(function(resolve){resolve(value)})};SyncPromise.reject=function(reason){return new SyncPromise(function(_,reject){reject(reason)})};SyncPromise.all=function(collection){return new SyncPromise(function(resolve,reject){if(!Array.isArray(collection)){reject(new TypeError("Promise.all requires an array as input."));return}if(0===collection.length){resolve([]);return}var counter=collection.length,resolvedCollection=[];collection.forEach(function(item,index){SyncPromise.resolve(item).then(function(value){resolvedCollection[index]=value;counter-=1;if(0!==counter){return}resolve(resolvedCollection)}).then(null,reject)})})};SyncPromise.prototype.then=function(onfulfilled,onrejected){var _this=this;return new SyncPromise(function(resolve,reject){_this._attachHandler({onfulfilled:function(result){if(!onfulfilled){resolve(result);return}try{resolve(onfulfilled(result))}catch(e){reject(e)}},onrejected:function(reason){if(!onrejected){reject(reason);return}try{resolve(onrejected(reason))}catch(e){reject(e)}}})})};SyncPromise.prototype.catch=function(onrejected){return this.then(function(val){return val},onrejected)};SyncPromise.prototype.finally=function(onfinally){var _this=this;return new SyncPromise(function(resolve,reject){var val,isRejected;return _this.then(function(value){isRejected=!1;val=value;if(onfinally){onfinally()}},function(reason){isRejected=!0;val=reason;if(onfinally){onfinally()}}).then(function(){if(isRejected){reject(val);return}resolve(val)})})};return SyncPromise}();export{SyncPromise};