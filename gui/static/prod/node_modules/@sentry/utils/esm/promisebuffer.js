import{SentryError}from"./error.js";import{SyncPromise}from"./syncpromise.js";var PromiseBuffer=function(){function PromiseBuffer(_limit){this._limit=_limit;this._buffer=[]}PromiseBuffer.prototype.isReady=function(){return this._limit===void 0||this.length()<this._limit};PromiseBuffer.prototype.add=function(task){var _this=this;if(!this.isReady()){return SyncPromise.reject(new SentryError("Not adding Promise due to buffer limit reached."))}if(-1===this._buffer.indexOf(task)){this._buffer.push(task)}task.then(function(){return _this.remove(task)}).then(null,function(){return _this.remove(task).then(null,function(){})});return task};PromiseBuffer.prototype.remove=function(task){var removedTask=this._buffer.splice(this._buffer.indexOf(task),1)[0];return removedTask};PromiseBuffer.prototype.length=function(){return this._buffer.length};PromiseBuffer.prototype.drain=function(timeout){var _this=this;return new SyncPromise(function(resolve){var capturedSetTimeout=setTimeout(function(){if(timeout&&0<timeout){resolve(!1)}},timeout);SyncPromise.all(_this._buffer).then(function(){clearTimeout(capturedSetTimeout);resolve(!0)}).then(null,function(){resolve(!0)})})};return PromiseBuffer}();export{PromiseBuffer};