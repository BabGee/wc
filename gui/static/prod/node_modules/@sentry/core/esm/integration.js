import*as tslib_1 from"../../../tslib/tslib.es6.js";import{addGlobalEventProcessor,getCurrentHub}from"../../hub/esm/index.js";import{logger}from"../../utils/esm/index.js";export var installedIntegrations=[];export function getIntegrationsToSetup(options){var defaultIntegrations=options.defaultIntegrations&&tslib_1.__spread(options.defaultIntegrations)||[],userIntegrations=options.integrations,integrations=[];if(Array.isArray(userIntegrations)){var userIntegrationsNames_1=userIntegrations.map(function(i){return i.name}),pickedIntegrationsNames_1=[];defaultIntegrations.forEach(function(defaultIntegration){if(-1===userIntegrationsNames_1.indexOf(defaultIntegration.name)&&-1===pickedIntegrationsNames_1.indexOf(defaultIntegration.name)){integrations.push(defaultIntegration);pickedIntegrationsNames_1.push(defaultIntegration.name)}});userIntegrations.forEach(function(userIntegration){if(-1===pickedIntegrationsNames_1.indexOf(userIntegration.name)){integrations.push(userIntegration);pickedIntegrationsNames_1.push(userIntegration.name)}})}else if("function"===typeof userIntegrations){integrations=userIntegrations(defaultIntegrations);integrations=Array.isArray(integrations)?integrations:[integrations]}else{integrations=tslib_1.__spread(defaultIntegrations)}var integrationsNames=integrations.map(function(i){return i.name}),alwaysLastToRun="Debug";if(-1!==integrationsNames.indexOf(alwaysLastToRun)){integrations.push.apply(integrations,tslib_1.__spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun),1)))}return integrations}export function setupIntegration(integration){if(-1!==installedIntegrations.indexOf(integration.name)){return}integration.setupOnce(addGlobalEventProcessor,getCurrentHub);installedIntegrations.push(integration.name);logger.log("Integration installed: "+integration.name)}export function setupIntegrations(options){var integrations={};getIntegrationsToSetup(options).forEach(function(integration){integrations[integration.name]=integration;setupIntegration(integration)});return integrations}