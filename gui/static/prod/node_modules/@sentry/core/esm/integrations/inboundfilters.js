import*as tslib_1 from"../../../../tslib/tslib.es6.js";import{addGlobalEventProcessor,getCurrentHub}from"../../../hub/esm/index.js";import{getEventDescription,isMatchingPattern,logger}from"../../../utils/esm/index.js";var DEFAULT_IGNORE_ERRORS=[/^Script error\.?$/,/^Javascript error: Script error\.? on line 0$/],InboundFilters=function(){function InboundFilters(_options){if(void 0===_options){_options={}}this._options=_options;this.name=InboundFilters.id}InboundFilters.prototype.setupOnce=function(){addGlobalEventProcessor(function(event){var hub=getCurrentHub();if(!hub){return event}var self=hub.getIntegration(InboundFilters);if(self){var client=hub.getClient(),clientOptions=client?client.getOptions():{},options=self._mergeOptions(clientOptions);if(self._shouldDropEvent(event,options)){return null}}return event})};InboundFilters.prototype._shouldDropEvent=function(event,options){if(this._isSentryError(event,options)){logger.warn("Event dropped due to being internal Sentry Error.\nEvent: "+getEventDescription(event));return!0}if(this._isIgnoredError(event,options)){logger.warn("Event dropped due to being matched by `ignoreErrors` option.\nEvent: "+getEventDescription(event));return!0}if(this._isBlacklistedUrl(event,options)){logger.warn("Event dropped due to being matched by `blacklistUrls` option.\nEvent: "+getEventDescription(event)+".\nUrl: "+this._getEventFilterUrl(event));return!0}if(!this._isWhitelistedUrl(event,options)){logger.warn("Event dropped due to not being matched by `whitelistUrls` option.\nEvent: "+getEventDescription(event)+".\nUrl: "+this._getEventFilterUrl(event));return!0}return!1};InboundFilters.prototype._isSentryError=function(event,options){if(void 0===options){options={}}if(!options.ignoreInternal){return!1}try{return event&&event.exception&&event.exception.values&&event.exception.values[0]&&"SentryError"===event.exception.values[0].type||!1}catch(_oO){return!1}};InboundFilters.prototype._isIgnoredError=function(event,options){if(void 0===options){options={}}if(!options.ignoreErrors||!options.ignoreErrors.length){return!1}return this._getPossibleEventMessages(event).some(function(message){return options.ignoreErrors.some(function(pattern){return isMatchingPattern(message,pattern)})})};InboundFilters.prototype._isBlacklistedUrl=function(event,options){if(void 0===options){options={}}if(!options.blacklistUrls||!options.blacklistUrls.length){return!1}var url=this._getEventFilterUrl(event);return!url?!1:options.blacklistUrls.some(function(pattern){return isMatchingPattern(url,pattern)})};InboundFilters.prototype._isWhitelistedUrl=function(event,options){if(void 0===options){options={}}if(!options.whitelistUrls||!options.whitelistUrls.length){return!0}var url=this._getEventFilterUrl(event);return!url?!0:options.whitelistUrls.some(function(pattern){return isMatchingPattern(url,pattern)})};InboundFilters.prototype._mergeOptions=function(clientOptions){if(void 0===clientOptions){clientOptions={}}return{blacklistUrls:tslib_1.__spread(this._options.blacklistUrls||[],clientOptions.blacklistUrls||[]),ignoreErrors:tslib_1.__spread(this._options.ignoreErrors||[],clientOptions.ignoreErrors||[],DEFAULT_IGNORE_ERRORS),ignoreInternal:"undefined"!==typeof this._options.ignoreInternal?this._options.ignoreInternal:!0,whitelistUrls:tslib_1.__spread(this._options.whitelistUrls||[],clientOptions.whitelistUrls||[])}};InboundFilters.prototype._getPossibleEventMessages=function(event){if(event.message){return[event.message]}if(event.exception){try{var _a=event.exception.values&&event.exception.values[0]||{},_b=_a.type,type=void 0===_b?"":_b,_c=_a.value,value=void 0===_c?"":_c;return[""+value,type+": "+value]}catch(oO){logger.error("Cannot extract message for event "+getEventDescription(event));return[]}}return[]};InboundFilters.prototype._getEventFilterUrl=function(event){try{if(event.stacktrace){var frames_1=event.stacktrace.frames;return frames_1&&frames_1[frames_1.length-1].filename||null}if(event.exception){var frames_2=event.exception.values&&event.exception.values[0].stacktrace&&event.exception.values[0].stacktrace.frames;return frames_2&&frames_2[frames_2.length-1].filename||null}return null}catch(oO){logger.error("Cannot extract url for event "+getEventDescription(event));return null}};InboundFilters.id="InboundFilters";return InboundFilters}();export{InboundFilters};