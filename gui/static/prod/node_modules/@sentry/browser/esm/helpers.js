import*as tslib_1 from"../../../tslib/tslib.es6.js";import{captureException,withScope}from"../../core/esm/index.js";import{addExceptionMechanism,addExceptionTypeValue,normalize}from"../../utils/esm/index.js";var ignoreOnError=0;export function shouldIgnoreOnError(){return 0<ignoreOnError}export function ignoreNextOnError(){ignoreOnError+=1;setTimeout(function(){ignoreOnError-=1})}export function wrap(fn,options,before){if(void 0===options){options={}}if("function"!==typeof fn){return fn}try{if(fn.__sentry__){return fn}if(fn.__sentry_wrapped__){return fn.__sentry_wrapped__}}catch(e){return fn}var sentryWrapped=function(){var args=Array.prototype.slice.call(arguments);try{if(before&&"function"===typeof before){before.apply(this,arguments)}var wrappedArguments=args.map(function(arg){return wrap(arg,options)});if(fn.handleEvent){return fn.handleEvent.apply(this,wrappedArguments)}return fn.apply(this,wrappedArguments)}catch(ex){ignoreNextOnError();withScope(function(scope){scope.addEventProcessor(function(event){var processedEvent=tslib_1.__assign({},event);if(options.mechanism){addExceptionTypeValue(processedEvent,void 0,void 0);addExceptionMechanism(processedEvent,options.mechanism)}processedEvent.extra=tslib_1.__assign({},processedEvent.extra,{arguments:normalize(args,3)});return processedEvent});captureException(ex)});throw ex}};try{for(var property in fn){if(Object.prototype.hasOwnProperty.call(fn,property)){sentryWrapped[property]=fn[property]}}}catch(_oO){}fn.prototype=fn.prototype||{};sentryWrapped.prototype=fn.prototype;Object.defineProperty(fn,"__sentry_wrapped__",{enumerable:!1,value:sentryWrapped});Object.defineProperties(sentryWrapped,{__sentry__:{enumerable:!1,value:!0},__sentry_original__:{enumerable:!1,value:fn}});try{var descriptor=Object.getOwnPropertyDescriptor(sentryWrapped,"name");if(descriptor.configurable){Object.defineProperty(sentryWrapped,"name",{get:function(){return fn.name}})}}catch(_oO){}return sentryWrapped}