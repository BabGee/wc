import{getCurrentHub,initAndBind,Integrations as CoreIntegrations}from"../../core/esm/index.js";import{getGlobalObject,SyncPromise}from"../../utils/esm/index.js";import{BrowserClient}from"./client.js";import{wrap as internalWrap}from"./helpers.js";import{Breadcrumbs,GlobalHandlers,LinkedErrors,TryCatch,UserAgent}from"./integrations/index.js";export var defaultIntegrations=[new CoreIntegrations.InboundFilters,new CoreIntegrations.FunctionToString,new TryCatch,new Breadcrumbs,new GlobalHandlers,new LinkedErrors,new UserAgent];export function init(options){if(void 0===options){options={}}if(options.defaultIntegrations===void 0){options.defaultIntegrations=defaultIntegrations}if(options.release===void 0){var window_1=getGlobalObject();if(window_1.SENTRY_RELEASE&&window_1.SENTRY_RELEASE.id){options.release=window_1.SENTRY_RELEASE.id}}initAndBind(BrowserClient,options)}export function showReportDialog(options){if(void 0===options){options={}}if(!options.eventId){options.eventId=getCurrentHub().lastEventId()}var client=getCurrentHub().getClient();if(client){client.showReportDialog(options)}}export function lastEventId(){return getCurrentHub().lastEventId()}export function forceLoad(){}export function onLoad(callback){callback()}export function flush(timeout){var client=getCurrentHub().getClient();if(client){return client.flush(timeout)}return SyncPromise.reject(!1)}export function close(timeout){var client=getCurrentHub().getClient();if(client){return client.close(timeout)}return SyncPromise.reject(!1)}export function wrap(fn){return internalWrap(fn)()}