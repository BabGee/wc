import * as tslib_1 from "../../../tslib/tslib.es6.js";
export { Severity, Status } from "../../types/esm/index.js";
export { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, Scope, setContext, setExtra, setExtras, setTag, setTags, setUser, withScope } from "../../core/esm/index.js";
export { BrowserClient } from "./client.js";
export { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from "./sdk.js";
export { SDK_NAME, SDK_VERSION } from "./version.js";
import { Integrations as CoreIntegrations } from "../../core/esm/index.js";
import { getGlobalObject } from "../../utils/esm/index.js";
import * as BrowserIntegrations from "./integrations/index.js";
import * as Transports from "./transports/index.js";
var windowIntegrations = {}; // This block is needed to add compatibility with the integrations packages when used with a CDN
// tslint:disable: no-unsafe-any

var _window = getGlobalObject();

if (_window.Sentry && _window.Sentry.Integrations) {
  windowIntegrations = _window.Sentry.Integrations;
} // tslint:enable: no-unsafe-any


var INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);

export { INTEGRATIONS as Integrations, Transports }; //# sourceMappingURL=index.js.map