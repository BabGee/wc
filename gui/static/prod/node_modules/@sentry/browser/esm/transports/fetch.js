import*as tslib_1 from"../../../../tslib/tslib.es6.js";import{Status}from"../../../types/esm/index.js";import{getGlobalObject,logger,parseRetryAfterHeader,supportsReferrerPolicy,SyncPromise}from"../../../utils/esm/index.js";import{BaseTransport}from"./base.js";var global=getGlobalObject(),FetchTransport=function(_super){tslib_1.__extends(FetchTransport,_super);function FetchTransport(){var _this=null!==_super&&_super.apply(this,arguments)||this;_this._disabledUntil=new Date(Date.now());return _this}FetchTransport.prototype.sendEvent=function(event){var _this=this;if(new Date(Date.now())<this._disabledUntil){return Promise.reject({event:event,reason:"Transport locked till "+this._disabledUntil+" due to too many requests.",status:429})}var defaultOptions={body:JSON.stringify(event),method:"POST",referrerPolicy:supportsReferrerPolicy()?"origin":""};return this._buffer.add(new SyncPromise(function(resolve,reject){global.fetch(_this.url,defaultOptions).then(function(response){var status=Status.fromHttpCode(response.status);if(status===Status.Success){resolve({status:status});return}if(status===Status.RateLimit){var now=Date.now();_this._disabledUntil=new Date(now+parseRetryAfterHeader(now,response.headers.get("Retry-After")));logger.warn("Too many requests, backing off till: "+_this._disabledUntil)}reject(response)}).catch(reject)}))};return FetchTransport}(BaseTransport);export{FetchTransport};