import*as tslib_1 from"../../../../tslib/tslib.es6.js";import{Status}from"../../../types/esm/index.js";import{logger,parseRetryAfterHeader,SyncPromise}from"../../../utils/esm/index.js";import{BaseTransport}from"./base.js";var XHRTransport=function(_super){tslib_1.__extends(XHRTransport,_super);function XHRTransport(){var _this=null!==_super&&_super.apply(this,arguments)||this;_this._disabledUntil=new Date(Date.now());return _this}XHRTransport.prototype.sendEvent=function(event){var _this=this;if(new Date(Date.now())<this._disabledUntil){return Promise.reject({event:event,reason:"Transport locked till "+this._disabledUntil+" due to too many requests.",status:429})}return this._buffer.add(new SyncPromise(function(resolve,reject){var request=new XMLHttpRequest;request.onreadystatechange=function(){if(4!==request.readyState){return}var status=Status.fromHttpCode(request.status);if(status===Status.Success){resolve({status:status});return}if(status===Status.RateLimit){var now=Date.now();_this._disabledUntil=new Date(now+parseRetryAfterHeader(now,request.getResponseHeader("Retry-After")));logger.warn("Too many requests, backing off till: "+_this._disabledUntil)}reject(request)};request.open("POST",_this.url);request.send(JSON.stringify(event))}))};return XHRTransport}(BaseTransport);export{XHRTransport};