import"../../../node_modules/@polymer/iron-ajax/iron-request.js";import{Response,COMMAND_REDIRECT}from"../parsers/response.js";export const httpMixin=BaseClass=>class extends BaseClass{constructor(){super();const location=window.location;this.protocol=location.protocol;this.hostname=location.hostname;this.port=location.port}static get properties(){return{protocol:String,hostname:String,port:Number}}baseUrl(){let fullHost=this.protocol+"//"+this.hostname+":"+this.port;if("development"===window.process.env.NODE_ENV){fullHost=URL.substr(0,URL.length-1)}return fullHost}async call(service,params,parseResponse){const self=this;if(parseResponse===void 0)parseResponse=!0;const headers={"X-CSRFToken":window.csrfToken,"X-Requested-With":"XMLHttpRequest","Content-Type":"application/json"};return new Promise(function(resolve,reject){if(window.NO_NETWORKING){console.warn("window.NO_NETWORKING=true");console.log(service,params);const requestResponse=window.TEST_PAYLOAD,response=new Response(requestResponse);resolve(response)}else{self.send({url:self.baseUrl()+"/GOTO/"+service+"/",body:params,method:"POST",handleAs:"json",headers:headers,withCredentials:!0}).then(function(req){const requestResponse=req.response;if(parseResponse){const response=new Response(requestResponse);if(response.containsServiceCommand(COMMAND_REDIRECT)){const redirect=response.parse(COMMAND_REDIRECT,!1),redirectTo=redirect.url;var l=document.createElement("a");l.href=redirectTo;if(l.pathname===window.location.pathname&&l.search===window.location.search){window.location.hash=l.hash;window.location.reload()}else{window.location.href=redirectTo}}resolve(response)}else{resolve(requestResponse)}}).catch(function(rejected){reject(rejected)})}})}send(config){return document.createElement("iron-request").send(config)}};