import{httpMixin}from"./http-mixin.js";import{Logger}from"../logger.js";import{STATUS_SUCCESS}from"../parsers/response.js";export const fileUploadMixin=BaseClass=>class extends httpMixin(BaseClass){constructor(){super()}uploadTempFile(file,name,types){const self=this;return new Promise(function(resolve,reject){if(types&&!file.type.match(types)){Logger.i.incompleteDev("File type not supported!");reject(new Error("File not supported!"))}if(file.size>12e6){reject(new Error("File Size is Above allowed Limit of 2MB!"))}const reader=new FileReader;reader.onload=function(e){self.send({url:self.baseUrl()+"/api/upload-temp-file/",body:formData,method:"POST",handleAs:"json",headers:{"X-File-Name":file.name,"X-File-Size":file.size,"X-File-Type":file.type}}).then(req=>{const response=req.response;if("response_status"in response&&response.response_status===STATUS_SUCCESS){resolve({name:file.name,response:response.response,result:e.target.result})}else{if("response"in response){reject(new Error(response.response))}else{console.error("[this should never happen]");reject(new Error("Upload Failed."))}}resolve(req)}).catch(rejected=>{reject(rejected)})};reader.readAsDataURL(file);const formData=new FormData;formData.append(name,file)})}};