var autoTableText=function(doc,text,x,y,styles){styles=styles||{};const FONT_ROW_RATIO=1.15;if("number"!==typeof x||"number"!==typeof y){console.error("The x and y parameters are required. Missing for text: ",text)}const k=doc.internal.scaleFactor,fontSize=doc.internal.getFontSize()/k,splitRegex=/\r\n|\r|\n/g;let splitText=null,lineCount=1;if("middle"===styles.valign||"bottom"===styles.valign||"center"===styles.halign||"right"===styles.halign){splitText="string"===typeof text?text.split(splitRegex):text;lineCount=splitText.length||1}y+=fontSize*(2-FONT_ROW_RATIO);if("middle"===styles.valign){y-=lineCount/2*fontSize*FONT_ROW_RATIO}else if("bottom"===styles.valign){y-=lineCount*fontSize*FONT_ROW_RATIO}if("center"===styles.halign||"right"===styles.halign){let alignSize=fontSize;if("center"===styles.halign){alignSize*=.5}if(1<=lineCount){for(let iLine=0;iLine<splitText.length;iLine++){doc.text(splitText[iLine],x-doc.getStringUnitWidth(splitText[iLine])*alignSize,y);y+=fontSize*FONT_ROW_RATIO}return doc}x-=doc.getStringUnitWidth(text)*alignSize}if("justify"===styles.halign){doc.text(text,x,y,{maxWidth:styles.maxWidth||100,align:"justify"})}else{doc.text(text,x,y)}return doc};export default autoTableText;