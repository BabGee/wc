import{dataSourceMixin,BaseElement,utilsMixin,scaleTime,min,max,scaleLinear,axisBottom,timeDay,timeFormat,axisLeft,line,select,css,ChartStyleMixin}from"../../../../../components/adaptive-ui.js";const TimeSeriesBase=class extends utilsMixin(dataSourceMixin(BaseElement)){static get properties(){return{data:Object,rows:Array,columns:Array,chart:Object,svg:Object,svgCanvas:Object,width:Number,height:Number,margin:Object,x_axis:Object,y_axis:Object,x_axisElement:Object,y_axisElement:Object,x_axisLabelElement:Object,y_axisLabelElement:Object,line:Object,dots:Object,x_axisLabel:String,y_axisLabel:String,tooltip:Object,legendColor:Object,legendKey:Object,chartTitle:Object,parsedArrayObjects:Array}}constructor(){super()}firstUpdated(changedProperties){super.firstUpdated(changedProperties);const self=this;self.chart=self.qs("#chart");self.createSVGDimensions();self.loader.then(dsc=>{self.data=dsc.data;self.rows=dsc.rows;self.columns=dsc.cols;const linearPosition=parseInt(this.e.details.linear_position);self.x_axisLabel=self.toTitleCase(self.cols[0].label);self.y_axisLabel=self.toTitleCase(self.cols[linearPosition].label);this.parseRows(0,linearPosition);self.initTimeSeriesChart();this.drawTimeSeriesChat();window.addEventListener("resize",()=>{this.createSVGDimensions();this.drawTimeSeriesChat()})})}initTimeSeriesChart(){this.createSVGDimensions();this.createX_Scale();this.createY_Scale();this.createX_Axis();this.createY_Axis();this.createLine();this.drawSVG();this.drawSVGCanvas();this.createToolTip();this.createPath();this.createDots();this.createX_AxisElement();this.createY_AxisElement();this.createX_AxisLabelElement();this.createY_AxisLabelElement();this.drawChatTitle();this.drawLegend()}parseRows(datePosition,linearPosition){this.parsedArrayObjects=this.rows.map(row=>{let object={date:new Date(row[datePosition]),linear:parseFloat(row[linearPosition])};return object})}createSVGDimensions(){const chartWidth=this.chart.getBoundingClientRect().width;this.margin={top:15,right:45,bottom:60,left:45};this.width=.95*chartWidth-this.margin.left-this.margin.right;this.height=this.width/1.777-this.margin.top-this.margin.bottom;if(500>chartWidth&&350<chartWidth){this.height=1.5*this.width}if(350>chartWidth){this.margin.bottom=80;this.height=1.6*this.width-this.margin.top-(this.margin.bottom-50)}}createX_Scale(){this.x_scale=scaleTime().domain([min(this.parsedArrayObjects,d=>d.date),max(this.parsedArrayObjects,d=>d.date)])}createY_Scale(){this.y_scale=scaleLinear().domain([0,max(this.parsedArrayObjects,d=>d.linear)])}createX_Axis(){this.x_axis=axisBottom(this.x_scale).ticks(timeDay).tickFormat(d=>timeFormat("%a %d")(d))}createY_Axis(){this.y_axis=axisLeft(this.y_scale)}createX_AxisElement(){this.x_axisElement=this.svgCanvas.append("g").attr("transform",`translate(0,${this.height})`)}createY_AxisElement(){this.y_axisElement=this.svgCanvas.append("g").attr("transform","translate(0,0)")}createLine(){this.line=line()}drawSVG(){this.svg=select(this.chart).append("svg").attr("preserveAspectRatio","xMinYMin meet")}drawSVGCanvas(){this.svgCanvas=this.svg.append("g").attr("transform",`translate(${this.margin.left},${this.margin.top+13})`)}createPath(){this.path=this.svgCanvas.append("path").datum(this.parsedArrayObjects).attr("fill","none").attr("stroke","var(--app-default-color)").attr("stroke-width",2.5)}createDots(){this.dots=this.svgCanvas.append("g").selectAll("dot").data(this.parsedArrayObjects).enter().append("circle").attr("r",3).attr("fill","var(--app-secondary-color)")}createX_AxisLabelElement(){this.x_axisLabelElement=this.svgCanvas.append("text").attr("text-anchor","middle").text(`${this.x_axisLabel}`)}createY_AxisLabelElement(){this.y_axisLabelElement=this.svgCanvas.append("text").attr("text-anchor","middle").attr("transform","rotate(-90)").text(`${this.y_axisLabel}`)}createToolTip(){this.tooltip=select(this.chart).append("div").attr("class","tooltip").style("opacity",0)}drawChatTitle(){this.chartTitle=this.svgCanvas.append("text").attr("text-anchor","start").attr("x",0).attr("y",-15).attr("font-size",16).text(this.e.name)}drawLegend(){const size=15;this.legendColor=this.svgCanvas.append("rect").attr("width",size).attr("height",size).style("fill","var(--app-default-color)");this.legendKey=this.svgCanvas.append("text").attr("text-anchor","end").text(this.y_axisLabel)}onDotMouseOverHandler(d,index,dots){this.tooltip.transition().duration(200).style("opacity",.9);this.tooltip.html(`${this.x_axisLabel}: ${timeFormat("%a %d")(d.date)}<br/>${this.y_axisLabel}: ${d.linear}`).style("left",`${select(dots[index]).attr("cx")-20}px`).style("top",`${select(dots[index]).attr("cy")}px`)}onDotMouseOutHandler(){this.tooltip.transition().duration(500).style("opacity",0)}drawTimeSeriesChat(){this.svg.attr("width",this.width+this.margin.left+this.margin.right);this.svg.attr("height",this.height+this.margin.top+this.margin.bottom);this.x_scale.range([0,this.width]);this.y_scale.range([this.height,0]);this.x_axis.scale(this.x_scale);this.y_axis.scale(this.y_scale);this.responsiveYTicks();this.x_axisElement.call(this.x_axis);this.y_axisElement.call(this.y_axis);this.styleAxesElements();this.responsiveAxesLabels();this.line.x(d=>this.x_scale(d.date)).y(d=>this.y_scale(d.linear));this.responsiveDots();this.chartTitle.attr("x",-this.margin.left);this.responsiveLegend();this.path.attr("d",this.line)}responsiveYTicks(){this.y_axis.tickSize(-this.width).tickFormat(d=>d)}responsiveLegend(){this.legendKey.attr("x",this.width+20).attr("text-anchor","end").attr("y",-15);const legendKeyWidth=this.legendKey.node().getBBox().width;this.legendColor.attr("x",this.width+20-legendKeyWidth-20).attr("y",-27);if(200>this.width){const y=this.height+(this.margin.bottom-15)+2;this.legendKey.attr("text-anchor","start").attr("y",y).attr("x",-(this.margin.left+13)+50);this.legendColor.attr("y",y-12).attr("x",-this.margin.left+13)}}responsiveAxesLabels(){this.y_axisLabelElement.attr("y",-this.margin.left+13).attr("x",-this.height/2);this.x_axisLabelElement.attr("x",this.width/2).attr("y",this.height+(this.margin.bottom-25))}responsiveDots(){this.dots.attr("cx",d=>this.x_scale(d.date)).attr("cy",d=>this.y_scale(d.linear)).on("mouseover",(d,index,dots)=>this.onDotMouseOverHandler(d,index,dots)).on("mouseout",d=>this.onDotMouseOutHandler(d))}styleAxesElements(){this.y_axisElement.call(g=>g.select(".domain").remove()).call(g=>g.selectAll(".tick:not(:first-of-type) line").attr("stroke-opacity",.3)).call(g=>g.selectAll("text").attr("x",-7));this.x_axisElement.attr("transform",`translate(0,${this.height})`).call(g=>g.select(".domain").remove()).call(g=>g.selectAll(".tick:not(:first-of-type) line").attr("stroke-opacity",.3)).call(g=>g.selectAll("text").attr("transform",`rotate(0)`).attr("y",9).attr("x",0).attr("dy","0.71em").style("text-anchor","middle"));if(200>this.width){this.x_axisElement.call(g=>g.selectAll("text").attr("y",0).attr("x",9).attr("dy",".35em").attr("transform","rotate(70)").style("text-anchor","start"))}}toTitleCase(string){if(!string)return"";string=string.toString();string=string.toLowerCase().split(" ");let newString=[];for(let i=0;i<string.length;i++){newString[i]=string[i].substr(0,1).toUpperCase()+string[i].substr(1)}return newString.join(" ")}dscDataName(){return this.dataName}init(pElement,loader){super.init(pElement,loader);var self=this;self.loader=this.loadData()}static get is(){return"time-series"}};var timeSeries={TimeSeriesBase:TimeSeriesBase};const TimeSeriesStyles=css`
    .chart-container {
        padding:16px;
    }
    .card {
        justify-content: center;
        padding: 16px;
    }
    .tooltip {   
        position: absolute;           
        text-align: center;           
        width: fit-content;                  
        height: fit-content;                 
        padding: 4px;             
        font: 16px sans-serif;  
        color: white;   
        font-weight: 500;   
        background: black;   
        border: 0px;      
        border-radius: 4px;           
        pointer-events: none;         
    }
`;var timeSeriesCss={TimeSeriesStyles:TimeSeriesStyles};class TimeSeries extends ChartStyleMixin(TimeSeriesBase){static get styles(){return[TimeSeriesStyles,css`
                :host {
                    display: block;
                }
            `]}}customElements.define(TimeSeries.is,TimeSeries);export{timeSeries as $timeSeries,timeSeriesCss as $timeSeriesCss,TimeSeriesBase,TimeSeriesStyles};