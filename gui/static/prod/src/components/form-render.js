import{html,LitElement}from"../../node_modules/lit-element/lit-element.js";import{GetSection}from"../core/parsers/commands/get-section.js";import{COMMAND_SESSION,COMMAND_WINDOW_EVENT,COMMAND_GET_SECTION,COMMAND_CLEAR_CART}from"../core/parsers/response.js";import{PageInputGroup}from"../core/parsers/commands/iic/page-input-group.js";import{store}from"../store.js";import{Logger}from"../core/logger.js";import{showSnackbar}from"../actions/app.js";import{utilsMixin}from"../core/mixins/utils-mixin.js";import{serviceCallMixin}from"../core/mixins/servicecall-mixin.js";import{SNACKBAR_CONTEXT_DANGER,SNACKBAR_CONTEXT_SUCCESS}from"./snack-bar.js";import{RENDER_M_DEFAULT,RENDER_M_SIDE_BY_SIDE}from"./e-list.js";export const FORM_TYPE_FORM="FORM";export const FORM_TYPE_PAYMENTS_FORM="PAYMENTS FORM";export const FORM_TYPE_LANDING_FORM="LANDING FORM";export const FORM_TYPE_SECTION_FORM="SECTION FORM";export const FORM_TYPE_HERO_FORM="HERO FORM";export const FORM_TYPE_HIDDEN_FORM="HIDDEN FORM";export const FORM_TYPE_WINDOW_EVENT="WINDOW EVENT FORM";export const FormRenderBase=class extends utilsMixin(serviceCallMixin(LitElement)){constructor(){super();this.sections=[];this.loading=!1;this.pos=0;this.renderMode=RENDER_M_DEFAULT}set feed(val){const oldVal=this._feed;if(val===oldVal){return}this._feed=val;this.sections=[this._feed];this.pos=0;this.stepParams=this.params?this.mergeParams({},this.params):{};if("render"in this._feed.details){this.renderMode=+this._feed.details.render.mode}this.requestUpdate("feed",oldVal)}get feed(){return this._feed}static get is(){return"form-render"}static get properties(){return{params:{type:Object},stepParams:{type:Object},feed:Object,_feed:{type:PageInputGroup},activeFeed:{type:PageInputGroup},pos:{type:Number},bind:{type:Number,notify:!0},sections:Array,renderMode:Number}}render(){throw new DOMException("extending must implement render")}firstUpdated(changedProperties){super.firstUpdated(changedProperties)}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{if("pos"===propName){this.updateComplete.then(()=>{this.feedChange()})}})}feedChange(){const feed=this.__computeActiveFeed();if(feed.autoSubmits){this.submitForm()}}paramsCopy(){return this.mergeParams(this.stepParams,this.params)}activeFeedOe(){const self=this,af=self.__computeActiveFeed();return af.oe}_onPosChange(evt){Logger.i.debug(evt.detail);this.pos=evt.detail.pos}__computeActiveFeed(){const self=this;if(self.sections.length){return self.sections[self.pos]}}mergeParams(obj1,obj2){var obj3={};if(obj1){for(var attrname in obj2){obj3[attrname]=obj2[attrname]}}if(obj2){for(var attrname in obj1){obj3[attrname]=obj1[attrname]}}return obj3}get form(){return this.shadowRoot.querySelector("#form")}_dialog(...args){const adaptiveUi=document.querySelector("adaptive-ui");if(args[0]instanceof GetSection){if(!args[1]){Logger.i.warn(`[DEPRECATED API USAGE] 
          Whatever called this should update to include the get_section service and params`)}}else{args[1]=this.mergeParams(args[1],this.stepParams)}adaptiveUi.dialogView.apply(adaptiveUi,args)}handleResponse(response){const self=this;if(response.containsServiceCommand(COMMAND_SESSION)){const session=localStorage.getItem("session");if(!session||"undefined"===typeof session){localStorage.setItem("session",response.serviceCommands[COMMAND_SESSION].response)}}if(response.containsServiceCommand(COMMAND_GET_SECTION)){const command=response.serviceCommands[COMMAND_GET_SECTION];try{const newFeed=command.pageGroups[0].pages[0].pageInputGroups[0];if(self.sections.length<self.pos+1){self.sections.push(newFeed)}else{self.sections[self.pos+1]=newFeed}self.pos+=1}catch(e){console.error(e)}}if(response.containsServiceCommand(COMMAND_CLEAR_CART)){localStorage.setItem("shop-cart",JSON.stringify([]));self.dispatchEvent(new CustomEvent("change-cart-count",{bubbles:!0,composed:!0,detail:{}}))}store.dispatch(showSnackbar(response.summary(),response.summaryTitle(),response.isSuccessful()?SNACKBAR_CONTEXT_SUCCESS:SNACKBAR_CONTEXT_DANGER))}submitForm(){const self=this;if(self.loading){Logger.i.warn("A Submit is already in processing");return}self.loading=!0;var formValid=this.form.validate();if(!formValid){console.warn("invalid FORM");self.loading=!1;return}const formData=this.form.serialize();self.stepParams=self.mergeParams(formData,self.stepParams);const af=self.__computeActiveFeed(),formType=af.formType();if(formType===FORM_TYPE_WINDOW_EVENT||"GET"===af.formMethod){window.addEventListener("message",function(ev){if("deliverResult"===ev.data.message){ev.source.close();self.loading=!1;self.handleResponse(ev.data.payload)}});let endpoint=af.inputVarAt(5)+"?";const paramsString=Object.keys(formData).map(function(k){return encodeURIComponent(k)+"="+encodeURIComponent(self.stepParams[k])}).join("&");endpoint=endpoint+paramsString;const w=600,h=600,left=window.screen.width/2-(w/2+10),top=window.screen.height/2-(h/2+50),child=window.open(endpoint,"_blank",`toolbar=no, 
        location=no, 
        directories=no, 
        status=no, 
        menubar=no, 
        scrollbars=yes, 
        resizable=no, copyhistory=no, width=${w}, height=${h}, top=${top}, left=${left}`),interval=setInterval(function(){child.postMessage({message:"requestResult"},"https://gomipay.com");if(child.closed){clearInterval(interval)}console.log("Interval Check")},500)}else{this.callServiceParams(af.service,self.mergeParams(self.params,self.stepParams)).then(function(response){self.loading=!1;if(response.containsServiceCommand(COMMAND_WINDOW_EVENT)){if(window.Android){Android.onWindowEvent(response.stringify())}else{const interval=setInterval(function(){window.addEventListener("message",function(ev){if("requestResult"===ev.data.message){const origin=ev.origin||ev.originalEvent.origin;ev.source.postMessage({message:"deliverResult",success:!0,payload:response},origin);clearInterval(interval)}})},500)}}self.handleResponse(response)}).catch(function(error){console.log(error);self.loading=!1})}}};