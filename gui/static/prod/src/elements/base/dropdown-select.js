import{dataSourceMixin}from"../../core/mixins/datasource-mixin.js";import{utilsMixin}from"../../core/mixins/utils-mixin.js";import{SerializableElement}from"../../core/serializable-element.js";export const DropdownSelectBase=class extends utilsMixin(dataSourceMixin(SerializableElement)){static get is(){return"dropdown-select"}static get properties(){return{icon:String,title:String,maxlength:Number,pattern:String,q:String,dropdownValue:Object,params:Object,columnSize:Array}}getName(){const el=this.e.formName.split("=");return el[0]}validate(){if(this.e.required&&!this.getValue()||this.getValue()===void 0){return new this.Validation(!1,"invalid")}return new this.Validation(!0,"valid")}valid(){}invalid(){}_dataJoined(data){const self=this;var concatExclude=[];if(self.e.details.concat_exclude){concatExclude=self.e.details.concat_exclude.split(",")}return data.filter(function(item,index){return!(0===index||concatExclude.includes(index+"")||self.cols.length&&"href"===self.cols[index].type)}).join(" ")}dscDataName(){return this.e.defaultValue}firstUpdated(changedProperties){super.firstUpdated(changedProperties);const self=this;this.loader.then(()=>{self.q="";self.currentGroups=self.groups;self.currentData=self.data;if(0<Object.keys(self.rows).length&&!self.dropdownValue){self.dropdownValue=self.rows[0][0]}})}_computeItemsCount(rows){return rows.length}_shouldFilter(items){var b=this._computeItemsCount(items);return 10<b}_computeItems(rows,q){const filtered_items=[];for(let i=0;i<rows.length;i++){const item=rows[i];if(q){var query=q.toLowerCase(),name=item[1].toLowerCase();if(-1!==name.indexOf(query)){filtered_items.push(item)}}else{filtered_items.push(item)}}return filtered_items}init(pElement,loader){super.init(pElement,loader);var self=this;self.required=this.e.required||pElement.min&&0<pElement.min;self.title=DropdownSelectBase.toTitleCase(pElement.name);self.icon=pElement.icon;self.params=self.pl.paramsCopy();self.maxlength=pElement.max;self.loader=this.loadData()}};