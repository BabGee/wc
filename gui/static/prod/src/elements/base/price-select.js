import{dataSourceMixin}from"../../core/mixins/datasource-mixin.js";import{utilsMixin}from"../../core/mixins/utils-mixin.js";import{SerializableElement}from"../../core/serializable-element.js";export const PriceSelectBase=class extends utilsMixin(dataSourceMixin(SerializableElement)){static get is(){return"price-select"}static get properties(){return{icon:String,title:String,q:{type:String,value:""},dropdownValue:Object,rows:{value:[]},params:{type:Object,value:""},columnSize:{type:Array},selected:String,colorType:{type:Array}}}getValue(){return this.selected}getName(){const el=this.e.formName.split("=");return el[0]}validate(){if(this.e.required&&!this.getValue()){return new this.Validation(!1,"valid")}return new this.Validation(!0,"valid")}_dataJoined(data){const self=this;return data.filter(function(item,index){if(0===index||self.cols.length&&"href"===self.cols[index].type){return!1}return!0}).join(" ")}dscDataName(){return this.e.defaultValue}firstUpdated(changedProperties){super.firstUpdated(changedProperties);const self=this;this.loader.then(dsc=>{self.cols=dsc.cols;self.rows=dsc.rows;self.q="";self.groups=dsc.groups;self.currentGroups=self.groups;self.data=dsc.data;self.currentData=self.data;if(0<Object.keys(self.rows).length&&!self.dropdownValue){self.dropdownValue=self.rows[0][0]}})}setSelected(num){this.selected=num}init(pElement,loader){super.init(pElement,loader);var self=this;self.required=this.e.required||pElement.min&&0<pElement.min;self.title=PriceSelectBase.toTitleCase(pElement.name);self.icon=pElement.icon;self.params=self.pl.paramsCopy();self.dropdownValue=+pElement.kind;self.loader=this.loadData();self.colorType=["success","secondary","warning","danger","primary"]}};