import{BaseElement}from"../../core/base-element.js";import{serviceCallMixin}from"../../core/mixins/servicecall-mixin.js";import{utilsMixin}from"../../core/mixins/utils-mixin.js";import{adaptiveUiMixin}from"../../core/mixins/adaptiveui-mixin.js";export const NavbarDefaultBase=class extends adaptiveUiMixin(utilsMixin(serviceCallMixin(BaseElement))){static get is(){return"navbar-default"}constructor(){super();this.menuGroups=[]}static get properties(){return{menuGroups:Array}}shopping(evt){evt.preventDefault();var self=this;const navigateTo=evt.currentTarget.dataset.href;window.history.replaceState("Dialog","Dialog",navigateTo);if(window.preloads[navigateTo]&&window.preloads[navigateTo].res){self.pl._dialog.apply(self.pl,[window.preloads[navigateTo].res,{service:window.preloads[navigateTo].service,params:this.serviceCallParams()}])}else{self.pl._dialog(window.preloads[navigateTo].service,this.serviceCallParams())}}parseMenus(){const menuGroups=[],menus=JSON.parse(this.e.defaultValue);for(const key in menus){if(menus.hasOwnProperty(key)){const menu=menus[key],title=Object.keys(menu)[0],menuGroup={title:title,items:[]},menuItemsWrapper=menu[title],itemsOrder=Object.keys(menuItemsWrapper);for(let index=0;index<itemsOrder.length;index++){const itemKey=itemsOrder[index],item=menuItemsWrapper[itemKey];menuGroup.items.push({title:item[0],icon:item[1],service:item[3],route:item[2]})}menuGroups.push(menuGroup)}}this.menuGroups=menuGroups}firstUpdated(changedProperties){super.firstUpdated(changedProperties)}serviceCallParams(){return this.params}loadService(service,navigateTo){if(window.preloads[navigateTo]&&window.preloads[navigateTo].res){if(window.location.pathname===navigateTo){this.pl._dialog.apply(this.pl,[window.preloads[navigateTo].res,{service:service,params:this.serviceCallParams()}])}}else{this.callService(service).then(res=>{window.preloads[navigateTo]={res:res.serviceCommands.get_section,service:service};if(window.location.pathname===navigateTo){this.pl._dialog.apply(this.pl,[window.preloads[navigateTo].res,{service:service,params:this.serviceCallParams()}])}}).catch(err=>console.log(err))}}init(pElement,loader){super.init(pElement,loader);var self=this;this.parseMenus();self.params=loader.pl.paramsCopy();const au=document.querySelector("adaptive-ui"),basePath=au.getAttribute("path");this.basePath=basePath;if(!window.paths){window.paths={}}if(!window.preloads){window.preloads={}}for(const menuGroupIndex in this.menuGroups){const menuGroup=this.menuGroups[menuGroupIndex];for(const menuGroupItemIndex in menuGroup.items){const menuGroupItem=menuGroup.items[menuGroupItemIndex],key=`/${basePath}/${menuGroupItem.route}/`;self.loadService(menuGroupItem.service,key)}}}};