import{fileUploadMixin}from"../../core/mixins/fileupload-mixin.js";import{utilsMixin}from"../../core/mixins/utils-mixin.js";import{SerializableElement}from"../../core/serializable-element.js";export const BulkUploadBase=class extends utilsMixin(fileUploadMixin(SerializableElement)){constructor(){super();this.uploads=[]}static get is(){return"bulk-upload"}static get properties(){return{icon:String,service:String,title:String,value:String,fileName:String,required:Boolean,columnSize:Array,uploads:Array}}getName(){return this.e.formName}getValue(){return this.value}validate(){this.saveUploads();if(this.required&&!this.getValue()&&!this.e.defaultValue){return new this.Validation(!1,"this input is invalid")}return new this.Validation(!0,"this input is valid")}valid(){}invalid(){}firstUpdated(changedProperties){super.firstUpdated(changedProperties)}saveUploads(){this.value=this.uploads.map(function(upload){return`${upload.response}:${upload.name}`}).join("|")}init(pElement,loader){super.init(pElement,loader);var self=this;self.required=this.e.required||pElement.min&&0<pElement.min;self.icon=pElement.icon;self.title=BulkUploadBase.toTitleCase(pElement.name);self.service=pElement.service;self.params=loader.pl.params;self.maxlength=pElement.max}};